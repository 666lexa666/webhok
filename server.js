app.post('/webhook', async (req, res) => {
  try {
    const body = req.body;
    const transactionId = String(body.TransactionId); // ‚úÖ –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Å—Ç—Ä–æ–∫–µ

    console.log('üì© Webhook received:', body);

    // --- –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É operation_id ---
    const transaction = await Transaction.findOne({ operation_id: transactionId });

    if (!transaction) {
      console.log(`‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${transactionId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ`);
      return res.status(200).send('OK');
    }

    // --- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å ---
    transaction.status = body.Status || 'Unknown';
    transaction.dateUp = new Date();
    await transaction.save();

    console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${transactionId} –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${transaction.status}`);

    // --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram ---
    const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

    const msg = `üí∞ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –æ–±–Ω–æ–≤–ª—ë–Ω\n\nüÜî ID: ${transactionId}\nüìß Email: ${transaction.customer_email || '‚Äî'}\nüí≥ –°—Ç–∞—Ç—É—Å: ${transaction.status}`;
    await axios.post(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      chat_id: TELEGRAM_CHAT_ID,
      text: msg,
      parse_mode: 'HTML',
    });

    console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
    res.status(200).send('OK');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:', err);
    res.status(500).send('Error');
  }
});
